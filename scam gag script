-- Trade freez GAG (centered, animated border, drag handle)
-- Автор: для Казак. Фокус: центр-попин, градиентная обводка, drag-кнопка, без уведомлений-заглушек.

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- ПАЛИТРА
local COLORS = {
    Primary  = Color3.fromRGB(38, 92, 255),
    Primary2 = Color3.fromRGB(112, 68, 255),
    BG       = Color3.fromRGB(18, 18, 22),
    Panel    = Color3.fromRGB(24, 24, 30),
    Stroke   = Color3.fromRGB(60, 60, 72),
    Text     = Color3.fromRGB(235, 238, 245),
    Muted    = Color3.fromRGB(160, 166, 185),
    Success  = Color3.fromRGB(60, 210, 110),
    Warn     = Color3.fromRGB(255, 167, 38)
}

-- Анимации
local EASE_OUT = TweenInfo.new(0.35, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local EASE_IN  = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.In)

-- GUI-основа
local gui = Instance.new("ScreenGui")
gui.Name = "TradeFreezGAG"
gui.IgnoreGuiInset = true
gui.ResetOnSpawn = false
gui.Parent = playerGui

-- Размытие сзади (мягкое)
local function getBlur()
    local blur = Lighting:FindFirstChild("GAGBlur")
    if not blur then
        blur = Instance.new("BlurEffect")
        blur.Name = "GAGBlur"
        blur.Size = 0
        blur.Parent = Lighting
    end
    return blur
end

-- Тоггл-кнопка (левый верх)
local toggle = Instance.new("TextButton")
toggle.Name = "GAG_Toggle"
toggle.Parent = gui
toggle.Size = UDim2.fromOffset(42, 42)
toggle.Position = UDim2.fromOffset(18, 18)
toggle.Text = "≡"
toggle.Font = Enum.Font.GothamBold
toggle.TextSize = 22
toggle.TextColor3 = COLORS.Text
toggle.BackgroundColor3 = COLORS.Panel
toggle.AutoButtonColor = false
do
    local c = Instance.new("UICorner", toggle); c.CornerRadius = UDim.new(0, 10)
    local s = Instance.new("UIStroke", toggle); s.Thickness = 1; s.Color = COLORS.Stroke
end

-- ВНЕШНЯЯ ОБОЛОЧКА (градиентная обводка)
local shell = Instance.new("Frame")
shell.Name = "GAG_Shell"
shell.Parent = gui
shell.AnchorPoint = Vector2.new(0.5, 0.5)
shell.Position = UDim2.fromScale(0.5, 0.5)
shell.Size = UDim2.fromOffset(400, 240)
shell.BackgroundColor3 = Color3.fromRGB(30, 30, 38) -- подложка для градиента

local shellCorner = Instance.new("UICorner", shell)
shellCorner.CornerRadius = UDim.new(0, 16)

-- Градиент по фону оболочки, виден как "рамка" вокруг внутренней панели
local borderGradient = Instance.new("UIGradient", shell)
borderGradient.Rotation = 0
borderGradient.Offset = Vector2.new(0, 0)
borderGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)),
    ColorSequenceKeypoint.new(0.20, Color3.fromRGB(255, 220, 120)),
    ColorSequenceKeypoint.new(0.40, Color3.fromRGB(120, 240, 255)),
    ColorSequenceKeypoint.new(0.60, Color3.fromRGB(180, 130, 255)),
    ColorSequenceKeypoint.new(0.80, Color3.fromRGB(255, 140, 220)),
    ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255)),
})

-- Внутренняя панель (покрывает центр, оставляет 3px рамки)
local panel = Instance.new("Frame")
panel.Name = "GAG_Panel"
panel.Parent = shell
panel.BackgroundColor3 = COLORS.Panel
panel.Position = UDim2.fromOffset(3, 3)
panel.Size = UDim2.new(1, -6, 1, -6)

local panelCorner = Instance.new("UICorner", panel)
panelCorner.CornerRadius = UDim.new(0, 14)

local panelStroke = Instance.new("UIStroke", panel)
panelStroke.Thickness = 1
panelStroke.Color = COLORS.Stroke
panelStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

-- Тень
local shadow = Instance.new("ImageLabel")
shadow.Name = "DropShadow"
shadow.Parent = shell
shadow.BackgroundTransparency = 1
shadow.Image = "rbxassetid://5028857084"
shadow.ImageColor3 = Color3.fromRGB(0,0,0)
shadow.ImageTransparency = 0.55
shadow.ScaleType = Enum.ScaleType.Slice
shadow.SliceCenter = Rect.new(24,24,276,276)
shadow.Size = UDim2.new(1, 40, 1, 40)
shadow.Position = UDim2.fromOffset(-20, -16)
shadow.ZIndex = 0

-- Верхняя полоса
local top = Instance.new("Frame", panel)
top.Name = "TopBar"
top.BackgroundColor3 = COLORS.Panel
top.Size = UDim2.new(1, 0, 0, 46)

local topCorner = Instance.new("UICorner", top)
topCorner.CornerRadius = UDim.new(0, 14)

-- Акцент-градиент на топбаре (тонко)
local topGrad = Instance.new("UIGradient", top)
topGrad.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, COLORS.Primary),
    ColorSequenceKeypoint.new(1, COLORS.Primary2),
})

local title = Instance.new("TextLabel", top)
title.Name = "Title"
title.Text = "Trade freez GAG"
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.TextColor3 = COLORS.Text
title.BackgroundTransparency = 1
title.Position = UDim2.fromOffset(16, 8)
title.Size = UDim2.new(1, -120, 1, -8)

-- Кнопка закрытия ✕
local closeBtn = Instance.new("TextButton", top)
closeBtn.Name = "Close"
closeBtn.Text = "✕"
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 18
closeBtn.TextColor3 = COLORS.Text
closeBtn.AutoButtonColor = false
closeBtn.BackgroundColor3 = Color3.fromRGB(0,0,0)
closeBtn.BackgroundTransparency = 0.75
closeBtn.Size = UDim2.fromOffset(34, 28)
closeBtn.Position = UDim2.new(1, -44, 0.5, -14)
local closeCorner = Instance.new("UICorner", closeBtn); closeCorner.CornerRadius = UDim.new(0, 8)

-- КНОПКА-ПЕРЕХВАТ ДЛЯ DRAG ("⠿")
local dragBtn = Instance.new("TextButton", top)
dragBtn.Name = "DragHandle"
dragBtn.Text = "⠿"
dragBtn.Font = Enum.Font.GothamBold
dragBtn.TextSize = 16
dragBtn.TextColor3 = COLORS.Text
dragBtn.AutoButtonColor = false
dragBtn.BackgroundColor3 = Color3.fromRGB(0,0,0)
dragBtn.BackgroundTransparency = 0.65
dragBtn.Size = UDim2.fromOffset(34, 28)
dragBtn.Position = UDim2.new(1, -84, 0.5, -14)
local dragCorner = Instance.new("UICorner", dragBtn); dragCorner.CornerRadius = UDim.new(0, 8)

-- Контент (без “пустой UI” текста)
local content = Instance.new("Frame", panel)
content.Name = "Content"
content.BackgroundTransparency = 1
content.Position = UDim2.fromOffset(16, 58)
content.Size = UDim2.new(1, -32, 1, -74)

local uiList = Instance.new("UIListLayout", content)
uiList.Padding = UDim.new(0, 10)
uiList.FillDirection = Enum.FillDirection.Vertical
uiList.HorizontalAlignment = Enum.HorizontalAlignment.Left
uiList.SortOrder = Enum.SortOrder.LayoutOrder

local function makeButton(text, color)
    local btn = Instance.new("TextButton")
    btn.Text = text
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 16
    btn.TextColor3 = COLORS.Text
    btn.AutoButtonColor = false
    btn.BackgroundColor3 = Color3.fromRGB(28, 28, 36)
    btn.Size = UDim2.new(0, 220, 0, 38)

    local corner = Instance.new("UICorner", btn); corner.CornerRadius = UDim.new(0, 10)
    local stroke = Instance.new("UIStroke", btn); stroke.Color = COLORS.Stroke; stroke.Thickness = 1

    local bar = Instance.new("Frame", btn)
    bar.BackgroundColor3 = color
    bar.Size = UDim2.new(0, 4, 1, 0)
    bar.Position = UDim2.new(0, 0, 0, 0)

    return btn
end

local freezeBtn = makeButton("Freeze Trade", COLORS.Warn);   freezeBtn.Parent = content
local acceptBtn = makeButton("Force Accept", COLORS.Success); acceptBtn.Parent = content

-- Мягкий пульс кнопки
local function pulseButton(btn)
    local original = btn.BackgroundColor3
    local to = Color3.fromRGB(60, 60, 72)
    TweenService:Create(btn, TweenInfo.new(0.12, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = to}):Play()
    task.delay(0.14, function()
        TweenService:Create(btn, TweenInfo.new(0.18, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = original}):Play()
    end)
end

-- ДЕЙСТВИЯ КНОПОК (без уведомлений)
freezeBtn.MouseButton1Click:Connect(function()
    pulseButton(freezeBtn)
    -- Здесь можешь добавить безопасную логику UI (подсветки, таймеры и т.п.)
end)
acceptBtn.MouseButton1Click:Connect(function()
    pulseButton(acceptBtn)
end)

-- POP-IN/POP-OUT по центру (через UIScale + прозрачность)
local scale = Instance.new("UIScale", shell)
scale.Scale = 0.9
shell.BackgroundTransparency = 1
panel.BackgroundTransparency = 1
top.BackgroundTransparency = 1
content.BackgroundTransparency = 1

local function setVisible(v)
    shell.Visible = v
end

local function setOpen(state)
    local blur = getBlur()
    if state then
        setVisible(true)
        TweenService:Create(scale, EASE_OUT, {Scale = 1}):Play()
        TweenService:Create(shell, EASE_OUT, {BackgroundTransparency = 0}):Play()
        TweenService:Create(panel, EASE_OUT, {BackgroundTransparency = 0}):Play()
        TweenService:Create(top, EASE_OUT, {BackgroundTransparency = 0}):Play()
        TweenService:Create(content, EASE_OUT, {BackgroundTransparency = 0}):Play()
        TweenService:Create(blur, EASE_OUT, {Size = 10}):Play()
    else
        local t1 = TweenService:Create(scale, EASE_IN, {Scale = 0.9})
        local t2 = TweenService:Create(shell, EASE_IN, {BackgroundTransparency = 1})
        local t3 = TweenService:Create(panel, EASE_IN, {BackgroundTransparency = 1})
        local t4 = TweenService:Create(top, EASE_IN, {BackgroundTransparency = 1})
        local t5 = TweenService:Create(content, EASE_IN, {BackgroundTransparency = 1})
        local tb = TweenService:Create(blur, EASE_IN, {Size = 0})
        t1:Play(); t2:Play(); t3:Play(); t4:Play(); t5:Play(); tb:Play()
        t1.Completed:Connect(function() setVisible(false) end)
    end
end

-- Изначально скрыто, откроем плавно
setVisible(false)
task.wait(0.15)
setOpen(true)

-- Тогглы
toggle.MouseButton1Click:Connect(function() setOpen(shell.Visible == false) end)
closeBtn.MouseButton1Click:Connect(function() setOpen(false) end)

-- Горячая клавиша (K)
UserInputService.InputBegan:Connect(function(input, gpe)
    if gpe then return end
    if input.KeyCode == Enum.KeyCode.K then
        setOpen(shell.Visible == false)
    end
end)

-- Drag только за кнопку dragBtn
do
    local dragging = false
    local dragStart, startPos

    local function update(input)
        local delta = input.Position - dragStart
        shell.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    dragBtn.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = shell.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            update(input)
        end
    end)
end

-- АНИМАЦИЯ ОБВОДКИ: бесконечный перелив (движение градиента)
task.spawn(function()
    while true do
        for i = 0, 1, 0.01 do
            borderGradient.Offset = Vector2.new(i, 0)
            task.wait(0.03)
        end
    end
end)
