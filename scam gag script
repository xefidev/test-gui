-- Trade freez GAG (safe UI template)
-- Автор: для Казак. Фокус: плавность, стиль, безопасность.
-- Клавиша открытия/закрытия: K

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Colors (можешь под себя настроить)
local COLORS = {
    Primary = Color3.fromRGB(38, 92, 255),      -- основной акцент (неон-синий)
    Primary2 = Color3.fromRGB(112, 68, 255),    -- второй акцент (фиолет)
    BG = Color3.fromRGB(18, 18, 22),            -- фон
    Panel = Color3.fromRGB(24, 24, 30),         -- панель
    Stroke = Color3.fromRGB(60, 60, 72),        -- обводка
    Text = Color3.fromRGB(235, 238, 245),       -- текст
    Muted = Color3.fromRGB(160, 166, 185),      -- текст вторичный
    Success = Color3.fromRGB(60, 210, 110),     -- зелёный
    Warn = Color3.fromRGB(255, 167, 38)         -- оранжевый
}

-- Easing
local EASE_OUT = TweenInfo.new(0.35, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local EASE_IN  = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.In)

-- ScreenGui
local gui = Instance.new("ScreenGui")
gui.Name = "TradeFreezGAG"
gui.IgnoreGuiInset = true
gui.ResetOnSpawn = false
gui.Parent = playerGui

-- Фоновое мягкое затемнение (через Blur)
local function getBlur()
    local blur = Lighting:FindFirstChild("GAGBlur")
    if not blur then
        blur = Instance.new("BlurEffect")
        blur.Name = "GAGBlur"
        blur.Size = 0
        blur.Parent = Lighting
    end
    return blur
end

-- Кнопка-тогглер (левый верх)
local toggle = Instance.new("TextButton")
toggle.Name = "GAG_Toggle"
toggle.Parent = gui
toggle.Size = UDim2.fromOffset(42, 42)
toggle.Position = UDim2.fromOffset(18, 18)
toggle.Text = "≡"
toggle.Font = Enum.Font.GothamBold
toggle.TextSize = 22
toggle.TextColor3 = COLORS.Text
toggle.BackgroundColor3 = COLORS.Panel
toggle.AutoButtonColor = false

local toggleCorner = Instance.new("UICorner", toggle)
toggleCorner.CornerRadius = UDim.new(0, 10)

local toggleStroke = Instance.new("UIStroke", toggle)
toggleStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
toggleStroke.Thickness = 1
toggleStroke.Color = COLORS.Stroke

local toggleShadow = Instance.new("Frame", toggle)
toggleShadow.Name = "Shadow"
toggleShadow.BackgroundColor3 = Color3.new(0, 0, 0)
toggleShadow.BackgroundTransparency = 0.85
toggleShadow.Size = UDim2.fromScale(1, 1)
toggleShadow.Position = UDim2.fromOffset(3, 4)
toggleShadow.ZIndex = 0

-- Основная панель
local panel = Instance.new("Frame")
panel.Name = "GAG_Panel"
panel.Parent = gui
panel.Size = UDim2.fromOffset(380, 220)
panel.Position = UDim2.new(0, -420, 0.5, -110) -- старт вне экрана слева
panel.BackgroundColor3 = COLORS.Panel
panel.Visible = true

local panelCorner = Instance.new("UICorner", panel)
panelCorner.CornerRadius = UDim.new(0, 14)

local panelStroke = Instance.new("UIStroke", panel)
panelStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
panelStroke.Thickness = 1
panelStroke.Color = COLORS.Stroke

-- Тень под панелью
local panelShadow = Instance.new("ImageLabel")
panelShadow.Name = "DropShadow"
panelShadow.Parent = panel
panelShadow.BackgroundTransparency = 1
panelShadow.Image = "rbxassetid://5028857084" -- мягкая тень
panelShadow.ImageColor3 = Color3.fromRGB(0,0,0)
panelShadow.ImageTransparency = 0.55
panelShadow.ScaleType = Enum.ScaleType.Slice
panelShadow.SliceCenter = Rect.new(24,24,276,276)
panelShadow.Size = UDim2.new(1, 40, 1, 40)
panelShadow.Position = UDim2.fromOffset(-20, -16)
panelShadow.ZIndex = 0

-- Верхняя полоса с градиентом и заголовком
local top = Instance.new("Frame", panel)
top.Name = "TopBar"
top.BackgroundColor3 = COLORS.Panel
top.Size = UDim2.new(1, 0, 0, 46)

local topCorner = Instance.new("UICorner", top)
topCorner.CornerRadius = UDim.new(0, 14)

-- Перекрытие радиуса снизу
local topMask = Instance.new("Frame", top)
topMask.BackgroundTransparency = 1
topMask.Size = UDim2.new(1, 0, 0, 14)
topMask.Position = UDim2.new(0, 0, 1, -14)

local grad = Instance.new("UIGradient", top)
grad.Rotation = 0
grad.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, COLORS.Primary),
    ColorSequenceKeypoint.new(1, COLORS.Primary2)
})

local title = Instance.new("TextLabel", top)
title.Name = "Title"
title.Text = "Trade freez GAG"
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.TextColor3 = COLORS.Text
title.BackgroundTransparency = 1
title.Position = UDim2.fromOffset(16, 8)
title.Size = UDim2.new(1, -80, 1, -8)

local titleStroke = Instance.new("UIStroke", title)
titleStroke.Thickness = 1
titleStroke.Color = Color3.fromRGB(0,0,0)
titleStroke.Transparency = 0.8

-- Кнопка закрытия (иконка ×)
local closeBtn = Instance.new("TextButton", top)
closeBtn.Name = "Close"
closeBtn.Text = "✕"
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 18
closeBtn.TextColor3 = COLORS.Text
closeBtn.AutoButtonColor = false
closeBtn.BackgroundColor3 = Color3.fromRGB(0,0,0)
closeBtn.BackgroundTransparency = 0.75
closeBtn.Size = UDim2.fromOffset(34, 28)
closeBtn.Position = UDim2.new(1, -44, 0.5, -14)

local closeCorner = Instance.new("UICorner", closeBtn)
closeCorner.CornerRadius = UDim.new(0, 8)

-- Контент
local content = Instance.new("Frame", panel)
content.Name = "Content"
content.BackgroundTransparency = 1
content.Position = UDim2.fromOffset(16, 58)
content.Size = UDim2.new(1, -32, 1, -74)

local uiList = Instance.new("UIListLayout", content)
uiList.Padding = UDim.new(0, 10)
uiList.FillDirection = Enum.FillDirection.Vertical
uiList.HorizontalAlignment = Enum.HorizontalAlignment.Left
uiList.SortOrder = Enum.SortOrder.LayoutOrder

local subtitle = Instance.new("TextLabel", content)
subtitle.Text = "Utility panel (safe). Buttons are placeholders."
subtitle.Font = Enum.Font.Gotham
subtitle.TextSize = 14
subtitle.TextColor3 = COLORS.Muted
subtitle.BackgroundTransparency = 1
subtitle.Size = UDim2.new(1, 0, 0, 20)

local function makeButton(text, color)
    local btn = Instance.new("TextButton")
    btn.Text = text
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 16
    btn.TextColor3 = COLORS.Text
    btn.AutoButtonColor = false
    btn.BackgroundColor3 = Color3.fromRGB(28, 28, 36)
    btn.Size = UDim2.new(0, 220, 0, 38)

    local corner = Instance.new("UICorner", btn)
    corner.CornerRadius = UDim.new(0, 10)

    local stroke = Instance.new("UIStroke", btn)
    stroke.Color = COLORS.Stroke
    stroke.Thickness = 1

    local bar = Instance.new("Frame", btn)
    bar.BackgroundColor3 = color
    bar.Size = UDim2.new(0, 4, 1, 0)
    bar.Position = UDim2.new(0, 0, 0, 0)

    return btn
end

local freezeBtn = makeButton("Freeze Trade", COLORS.Warn)
freezeBtn.Parent = content

local acceptBtn = makeButton("Force Accept", COLORS.Success)
acceptBtn.Parent = content

-- Хелпер уведомлений
local function notify(titleText, text)
    pcall(function()
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = titleText,
            Text = text,
            Duration = 3
        })
    end)
end

-- Пульс/хайлайт кнопки
local function pulseButton(btn)
    local original = btn.BackgroundColor3
    local highlight = Color3.fromRGB(
        math.clamp(original.R*255 + 20, 0, 255),
        math.clamp(original.G*255 + 20, 0, 255),
        math.clamp(original.B*255 + 20, 0, 255)
    )
    btn.BackgroundColor3 = Color3.fromRGB(highlight.R, highlight.G, highlight.B)
    local tween1 = TweenService:Create(btn, TweenInfo.new(0.12, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(60,60,72)})
    local tween2 = TweenService:Create(btn, TweenInfo.new(0.18, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = original})
    tween1:Play()
    tween1.Completed:Connect(function() tween2:Play() end)
end

-- Анимированное появление/скрытие панели + блюр фона
local isOpen = false
local targetPosOpen  = UDim2.new(0, 24, 0.5, -110)
local targetPosClose = UDim2.new(0, -420, 0.5, -110)

local function setOpen(state)
    isOpen = state
    local blur = getBlur()

    if state then
        panel.Visible = true
        TweenService:Create(panel, EASE_OUT, {Position = targetPosOpen}):Play()
        TweenService:Create(blur, EASE_OUT, {Size = 10}):Play()
    else
        local tween = TweenService:Create(panel, EASE_IN, {Position = targetPosClose})
        tween:Play()
        tween.Completed:Connect(function()
            panel.Visible = true -- держим видимой, пока на паркинге; можно скрывать, если надо
        end)
        local bTween = TweenService:Create(blur, EASE_IN, {Size = 0})
        bTween:Play()
    end
end

-- Клики
toggle.MouseButton1Click:Connect(function()
    setOpen(not isOpen)
    pulseButton(toggle)
end)

closeBtn.MouseButton1Click:Connect(function()
    setOpen(false)
    pulseButton(closeBtn)
end)

-- Горячая клавиша (K)
UserInputService.InputBegan:Connect(function(input, gpe)
    if gpe then return end
    if input.KeyCode == Enum.KeyCode.K then
        setOpen(not isOpen)
        pulseButton(toggle)
    end
end)

-- Драг панели
do
    local dragging = false
    local dragStart, startPos

    panel.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = panel.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            panel.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

-- Действия кнопок (безопасные заглушки)
freezeBtn.MouseButton1Click:Connect(function()
    pulseButton(freezeBtn)
    notify("Freeze Trade (UI)", "Визуальная заглушка. Без вмешательства в трейды.")
end)

acceptBtn.MouseButton1Click:Connect(function()
    pulseButton(acceptBtn)
    notify("Force Accept (UI)", "Визуальная заглушка. Без вмешательства в трейды.")
end)

-- Автовыезд при старте (красиво)
task.wait(0.2)
setOpen(true)
