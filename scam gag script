-- Trade freez GAG — Dark Theme, snug width, proper close, raised toggle
-- Автор: для Казак. UI-only.

-- Сервисы
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")

-- Игрок
local player = Players.LocalPlayer or Players.PlayerAdded:Wait()

-- Тёмная палитра
local COLORS = {
    BG       = Color3.fromRGB(12,12,14),
    Panel    = Color3.fromRGB(16,16,20),
    Stroke   = Color3.fromRGB(42,42,50),
    Text     = Color3.fromRGB(230,232,238),

    Primary  = Color3.fromRGB(52, 86, 160),   -- сдержанный акцент
    Primary2 = Color3.fromRGB(32, 48, 80),    -- глубина
    Accent   = Color3.fromRGB(90,160,255),

    ON       = Color3.fromRGB(60,210,110),
    OFF      = Color3.fromRGB(230,72,72),
    BTN      = Color3.fromRGB(22,22,28),
}

local SIZES = {
    BtnW = 280, BtnH = 42,
    ShellW = 280 + 32, -- ширина = ширина кнопки + по 16 px поля
    ShellH = 340,
    RadiusShell = 14, RadiusPanel = 12, RadiusBtn = 10,
    Avatar = 100,
}

local EASE_OUT = TweenInfo.new(0.35, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local EASE_IN  = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.In)

-- PlayerGui
local playerGui = player:WaitForChild("PlayerGui")

-- ScreenGui
local gui = Instance.new("ScreenGui")
gui.Name = "TradeFreezGAG"
gui.IgnoreGuiInset = true
gui.ResetOnSpawn = false
gui.DisplayOrder = 50
gui.Parent = playerGui

-- Размытие фона
local function getBlur()
    local blur = Lighting:FindFirstChild("GAGBlur")
    if not blur then
        blur = Instance.new("BlurEffect")
        blur.Name = "GAGBlur"
        blur.Size = 0
        blur.Parent = Lighting
    end
    return blur
end

-- КНОПКА ОТКРЫТИЯ (чуть выше центра)
local toggle = Instance.new("TextButton")
toggle.Name = "GAG_Toggle"
toggle.Parent = gui
toggle.Size = UDim2.fromOffset(56, 56)
toggle.AnchorPoint = Vector2.new(0.5, 0.5)
toggle.Position = UDim2.fromScale(0.5, 0.22) -- выше, чтобы не мешал
toggle.Text = "≡"
toggle.Font = Enum.Font.GothamBold
toggle.TextSize = 24
toggle.TextColor3 = COLORS.Text
toggle.BackgroundColor3 = Color3.fromRGB(20,20,26)
toggle.AutoButtonColor = false
toggle.ZIndex = 100
do
    local c = Instance.new("UICorner", toggle); c.CornerRadius = UDim.new(0, 12)
    local s = Instance.new("UIStroke", toggle); s.Thickness = 1; s.Color = COLORS.Stroke
    local glow = Instance.new("UIGradient", toggle)
    glow.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(40,60,100)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(26,34,56)),
    })
    glow.Rotation = 90
end

-- Перетаскивание toggle
do
    local dragging, dragStart, startPos
    local function update(input)
        local delta = input.Position - dragStart
        toggle.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
    toggle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true; dragStart = input.Position; startPos = toggle.Position
            input.Changed:Connect(function() if input.UserInputState == Enum.UserInputState.End then dragging = false end end)
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then update(input) end
    end)
end

-- Оболочка
local shell = Instance.new("Frame")
shell.Name = "GAG_Shell"
shell.Parent = gui
shell.AnchorPoint = Vector2.new(0.5, 0.5)
shell.Position = UDim2.fromScale(0.5, 0.5)
shell.Size = UDim2.fromOffset(SIZES.ShellW, SIZES.ShellH)
shell.BackgroundColor3 = Color3.fromRGB(22,24,30)
shell.Visible = false

local shellCorner = Instance.new("UICorner", shell)
shellCorner.CornerRadius = UDim.new(0, SIZES.RadiusShell)

-- Сдержанный «перелив» рамки (тёмный)
local borderGradient = Instance.new("UIGradient", shell)
borderGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0.00, Color3.fromRGB(36,40,52)),
    ColorSequenceKeypoint.new(0.50, Color3.fromRGB(28,32,44)),
    ColorSequenceKeypoint.new(1.00, Color3.fromRGB(36,40,52)),
})
borderGradient.Rotation = 0

-- Внутренняя панель с узкими полями
local panel = Instance.new("Frame")
panel.Name = "GAG_Panel"
panel.Parent = shell
panel.BackgroundColor3 = COLORS.Panel
panel.Position = UDim2.fromOffset(3, 3)
panel.Size = UDim2.new(1, -6, 1, -6)

local panelCorner = Instance.new("UICorner", panel)
panelCorner.CornerRadius = UDim.new(0, SIZES.RadiusPanel)

local panelStroke = Instance.new("UIStroke", panel)
panelStroke.Thickness = 1
panelStroke.Color = COLORS.Stroke

-- Тень
local shadow = Instance.new("ImageLabel")
shadow.Name = "DropShadow"
shadow.Parent = shell
shadow.BackgroundTransparency = 1
shadow.Image = "rbxassetid://5028857084"
shadow.ImageColor3 = Color3.fromRGB(0,0,0)
shadow.ImageTransparency = 0.6
shadow.ScaleType = Enum.ScaleType.Slice
shadow.SliceCenter = Rect.new(24,24,276,276)
shadow.Size = UDim2.new(1, 36, 1, 36)
shadow.Position = UDim2.fromOffset(-18, -14)
shadow.ZIndex = 0

-- Верхняя полоса (drag area) + title + крестик
local top = Instance.new("Frame", panel)
top.Name = "TopBar"
top.BackgroundColor3 = Color3.fromRGB(18,18,22)
top.Size = UDim2.new(1, 0, 0, 48)

local topCorner = Instance.new("UICorner", top)
topCorner.CornerRadius = UDim.new(0, SIZES.RadiusPanel)

local title = Instance.new("TextLabel", top)
title.Text = "Trade freez GAG"
title.Font = Enum.Font.GothamBold
title.TextSize = 19
title.TextColor3 = COLORS.Text
title.BackgroundTransparency = 1
title.Position = UDim2.fromOffset(16, 8)
title.Size = UDim2.new(1, -80, 1, -8)
title.TextXAlignment = Enum.TextXAlignment.Left

-- Только рабочий крестик
local closeBtn = Instance.new("TextButton", top)
closeBtn.Text = "✕"
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 18
closeBtn.TextColor3 = COLORS.Text
closeBtn.AutoButtonColor = false
closeBtn.BackgroundColor3 = Color3.fromRGB(28,28,34)
closeBtn.Size = UDim2.fromOffset(34, 28)
closeBtn.Position = UDim2.new(1, -42, 0.5, -14)
local closeCorner = Instance.new("UICorner", closeBtn); closeCorner.CornerRadius = UDim.new(0, 8)
local closeStroke = Instance.new("UIStroke", closeBtn); closeStroke.Thickness = 1; closeStroke.Color = COLORS.Stroke

-- Контент
local content = Instance.new("Frame", panel)
content.Name = "Content"
content.BackgroundTransparency = 1
content.Position = UDim2.fromOffset(16, 62)
content.Size = UDim2.new(1, -32, 1, -78) -- внутренняя ширина = BtnW ровно
local uiList = Instance.new("UIListLayout", content)
uiList.Padding = UDim.new(0, 10)
uiList.FillDirection = Enum.FillDirection.Vertical
uiList.HorizontalAlignment = Enum.HorizontalAlignment.Center
uiList.SortOrder = Enum.SortOrder.LayoutOrder

-- Профиль: headshot + ник
do
    local profileContainer = Instance.new("Frame")
    profileContainer.Name = "ProfileContainer"
    profileContainer.BackgroundTransparency = 1
    profileContainer.Size = UDim2.new(1, 0, 0, SIZES.Avatar + 38)
    profileContainer.Parent = content

    local profileLayout = Instance.new("UIListLayout", profileContainer)
    profileLayout.FillDirection = Enum.FillDirection.Vertical
    profileLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    profileLayout.VerticalAlignment = Enum.VerticalAlignment.Top
    profileLayout.Padding = UDim.new(0, 6)

    local avatarHolder = Instance.new("Frame")
    avatarHolder.BackgroundTransparency = 1
    avatarHolder.Size = UDim2.fromOffset(SIZES.Avatar, SIZES.Avatar)
    avatarHolder.Parent = profileContainer

    local avatarMask = Instance.new("Frame")
    avatarMask.Size = UDim2.fromScale(1, 1)
    avatarMask.BackgroundColor3 = Color3.fromRGB(20,20,26)
    avatarMask.Parent = avatarHolder
    local maskCorner = Instance.new("UICorner", avatarMask); maskCorner.CornerRadius = UDim.new(1, 0)
    local avatarStroke = Instance.new("UIStroke", avatarMask); avatarStroke.Thickness = 2; avatarStroke.Color = COLORS.Accent; avatarStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

    local avatarImg = Instance.new("ImageLabel")
    avatarImg.BackgroundTransparency = 1
    avatarImg.Size = UDim2.fromScale(1, 1)
    avatarImg.Parent = avatarMask
    local imgCorner = Instance.new("UICorner", avatarImg); imgCorner.CornerRadius = UDim.new(1, 0)
    avatarImg.ClipsDescendants = true

    task.spawn(function()
        local ok, contentId = pcall(function()
            return Players:GetUserThumbnailAsync(player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size180x180)
        end)
        if ok and contentId then avatarImg.Image = contentId end
    end)

    local usernameLabel = Instance.new("TextLabel")
    usernameLabel.Name = "UsernameLabel"
    usernameLabel.BackgroundTransparency = 1
    usernameLabel.Size = UDim2.new(0, SIZES.BtnW, 0, 22)
    usernameLabel.Text = player.DisplayName or player.Name
    usernameLabel.Font = Enum.Font.GothamBold
    usernameLabel.TextSize = 18
    usernameLabel.TextColor3 = COLORS.Text
    usernameLabel.TextXAlignment = Enum.TextXAlignment.Center
    usernameLabel.Parent = profileContainer
end

-- Фабрика тумблеров
local function makeToggleButton(text)
    local btn = Instance.new("TextButton")
    btn.Text = text
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 16
    btn.TextColor3 = COLORS.Text
    btn.AutoButtonColor = false
    btn.BackgroundColor3 = COLORS.BTN
    btn.Size = UDim2.fromOffset(SIZES.BtnW, SIZES.BtnH)

    local corner = Instance.new("UICorner", btn); corner.CornerRadius = UDim.new(0, SIZES.RadiusBtn)
    local stroke = Instance.new("UIStroke", btn); stroke.Color = COLORS.Stroke; stroke.Thickness = 1

    local status = Instance.new("Frame", btn)
    status.Name = "StatusBar"
    status.BackgroundColor3 = COLORS.OFF
    status.Size = UDim2.new(0, 6, 1, 0)
    status.Position = UDim2.new(0, 0, 0, 0)

    local tag = Instance.new("TextLabel", btn)
    tag.Name = "Tag"
    tag.BackgroundTransparency = 1
    tag.Text = "OFF"
    tag.Font = Enum.Font.GothamMedium
    tag.TextSize = 14
    tag.TextColor3 = Color3.fromRGB(255,225,225)
    tag.AnchorPoint = Vector2.new(1, 0.5)
    tag.Position = UDim2.new(1, -10, 0.5, 0)
    tag.Size = UDim2.fromOffset(60, 18)

    btn:SetAttribute("Enabled", false)
    return btn
end

local freezeBtn = makeToggleButton("Freeze Trade");   freezeBtn.Parent = content
local acceptBtn = makeToggleButton("Force Accept");   acceptBtn.Parent = content

-- Обновление визуала тумблера
local function setBtnState(btn, state)
    btn:SetAttribute("Enabled", state)
    local status = btn:FindFirstChild("StatusBar")
    local tag = btn:FindFirstChild("Tag")
    local target = state and COLORS.ON or COLORS.OFF

    if status then
        TweenService:Create(status, TweenInfo.new(0.18, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
            BackgroundColor3 = target,
            Size = UDim2.new(state and 1 or 0, state and 0 or 6, 1, 0)
        }):Play()
    end
    if tag then
        tag.Text = state and "ON" or "OFF"
        tag.TextColor3 = state and Color3.fromRGB(220,255,230) or Color3.fromRGB(255,225,225)
    end

    local flash = state and Color3.fromRGB(32,42,36) or Color3.fromRGB(46,30,30)
    TweenService:Create(btn, TweenInfo.new(0.12, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = flash}):Play()
    task.delay(0.14, function()
        TweenService:Create(btn, TweenInfo.new(0.18, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = COLORS.BTN}):Play()
    end)
end

-- Клики по тумблерам
local function bindToggle(btn)
    btn.MouseButton1Click:Connect(function()
        local cur = btn:GetAttribute("Enabled")
        setBtnState(btn, not cur)
    end)
end
bindToggle(freezeBtn)
bindToggle(acceptBtn)

-- POP-IN/POP-OUT
local scale = Instance.new("UIScale", shell)
scale.Scale = 0.9
shell.BackgroundTransparency = 1
panel.BackgroundTransparency = 1
top.BackgroundTransparency = 1
content.BackgroundTransparency = 1

local function setVisible(v) shell.Visible = v end

local function setOpen(open)
    local blur = getBlur()
    if open then
        setVisible(true)
        TweenService:Create(scale, EASE_OUT, {Scale = 1}):Play()
        TweenService:Create(shell, EASE_OUT, {BackgroundTransparency = 0}):Play()
        TweenService:Create(panel, EASE_OUT, {BackgroundTransparency = 0}):Play()
        TweenService:Create(top, EASE_OUT, {BackgroundTransparency = 0}):Play()
        TweenService:Create(content, EASE_OUT, {BackgroundTransparency = 0}):Play()
        TweenService:Create(blur, EASE_OUT, {Size = 10}):Play()
    else
        local t1 = TweenService:Create(scale, EASE_IN, {Scale = 0.9})
        local t2 = TweenService:Create(shell, EASE_IN, {BackgroundTransparency = 1})
        local t3 = TweenService:Create(panel, EASE_IN, {BackgroundTransparency = 1})
        local t4 = TweenService:Create(top, EASE_IN, {BackgroundTransparency = 1})
        local t5 = TweenService:Create(content, EASE_IN, {BackgroundTransparency = 1})
        local tb = TweenService:Create(blur, EASE_IN, {Size = 0})
        t1:Play(); t2:Play(); t3:Play(); t4:Play(); t5:Play(); tb:Play()
        t1.Completed:Connect(function() setVisible(false) end)
    end
end

-- Тогглы открытия/закрытия
toggle.MouseButton1Click:Connect(function() setOpen(shell.Visible == false) end)
closeBtn.MouseButton1Click:Connect(function() setOpen(false) end)
UserInputService.InputBegan:Connect(function(input, gpe)
    if gpe then return end
    if input.KeyCode == Enum.KeyCode.K then setOpen(shell.Visible == false) end
end)

-- Перетаскивание за top bar (соседнюю кнопку убрали)
do
    local dragging, dragStart, startPos
    local function update(input)
        local delta = input.Position - dragStart
        shell.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
    top.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true; dragStart = input.Position; startPos = shell.Position
            input.Changed:Connect(function() if input.UserInputState == Enum.UserInputState.End then dragging = false end end)
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then update(input) end
    end)
end

-- Неброская анимация «рамки»
task.spawn(function()
    while true do
        for i = 0, 1, 0.01 do
            borderGradient.Offset = Vector2.new(i, 0)
            task.wait(0.035)
        end
    end
end)

-- Авто-появление
task.wait(0.12)
setOpen(true)
